/*B√†i 9: M·ªôt c·ª≠a h√†ng c·∫ßn qu·∫£n l√Ω c√°c m·∫∑t h√†ng, th√¥ng tin m·ªôt m·∫∑t h√†ng bao g·ªìm:
‚Ä¢ M√£ h√†ng.
‚Ä¢ T√™n m·∫∑t h√†ng.
‚Ä¢ S·ªë l∆∞·ª£ng.
‚Ä¢ ƒê∆°n gi√°.
‚Ä¢ S·ªë l∆∞·ª£ng t·ªìn.
‚Ä¢ Th·ªùi gian b·∫£o h√†nh (t√≠nh theo ƒë∆°n v·ªã th√°ng).
a) H√£y nh·∫≠p v√†o m·ªôt danh s√°ch c√°c m·∫∑t h√†ng.
b) T√¨m m·∫∑t h√†ng c√≥ s·ªë l∆∞·ª£ng t·ªìn nhi·ªÅu nh·∫•t.
c) T√¨m m·∫∑t h√†ng c√≥ s·ªë l∆∞·ª£ng t·ªìn √≠t nh·∫•t.
d) T√¨m m·∫∑t h√†ng c√≥ gi√° ti·ªÅn cao nh·∫•t.
e) In ra nh·ªØng m·∫∑t h√†ng c√≥ th·ªùi gian b·∫£o h√†nh l·ªõn h∆°n 12 th√°ng.
f) S·∫Øp x·∫øp c√°c m·∫∑t h√†ng theo th·ª© t·ª± tƒÉng d·∫ßn c·ªßa s·ªë l∆∞·ª£ng t·ªìn*/

#include <iostream>
#include <string>
struct Store
{
    std::string ma_hang;
    std::string ten_hang;
    int so_luong;
    long long int don_gia;
    int so_luong_ton;
    int thoi_gian_bao_hanh;
    void input(int order = 0)
    {
        if (order == 0)
        {
            std::cout << "üëâüèªBan khong nhap vao mat hang nao caüëàüèª" << std::endl;
        }
        else
        {
            std::cout << "Dang nhap vao mat hang thu: " << order << std::endl;
            std::cout << "Nhap vao so luong: ";
            std::cin >> so_luong;
            std::cout << "Nhap vao don gia: ";
            std::cin >> don_gia;
            std::cout << "Nhap vao so luong ton: ";
            std::cin >> so_luong_ton;
            std::cout << "Nhap vao thoi gian bao hanh: ";
            std::cin >> thoi_gian_bao_hanh;
            std::cin.ignore();
            std::cout << "Nhap vao ma hang: ";
            getline(std::cin, ma_hang);
            std::cout << "Nhap vao ten hang: ";
            getline(std::cin, ten_hang);
        }
    }
    void output(int order)
    {
        std::cout << "Thong tin mat hang thu: " << order << std::endl;
        std::cout << "Ma hang: " << ma_hang << std::endl;
        std::cout << "Ten hang: " << ten_hang << std::endl;
        std::cout << "So luong: " << so_luong << std::endl;
        std::cout << "Don gia: " << don_gia << std::endl;
        std::cout << "So luong ton: " << so_luong_ton << std::endl;
        std::cout << "Thoi gian bao hanh: " << thoi_gian_bao_hanh << std::endl;
    }
};
Store find_max_SLT(Store *STO_1, int n)
{
    Store max = STO_1[0];
    for (int i = 0; i < n; i++)
    {
        if (STO_1[i].so_luong_ton > max.so_luong_ton)
        {
            max = STO_1[i];
        }
    }
    return max;
}
Store find_min_SLT(Store *STO_1, int n)
{
    Store min = STO_1[0];
    for (int i = 0; i < n; i++)
    {
        if (STO_1[i].so_luong_ton < min.so_luong_ton)
        {
            min = STO_1[i];
        }
    }
    return min;
}
Store find_max_price(Store *STO_1, int n)
{
    Store max_price = STO_1[0];
    for (int i = 0; i < n; i++)
    {
        if (STO_1[i].don_gia > max_price.don_gia)
        {
            max_price = STO_1[i];
        }
    }
    return max_price;
}
void find_bao_hanh(Store *STO_1, int n)
{
    for (int i = 0; i < n; i++)
    {
        if (STO_1[i].thoi_gian_bao_hanh > 12)
        {
            STO_1[i].output(i + 1);
            std::cout << std::endl;
        }
    }
}
void swap(Store *a, Store *b)
{
    Store danh = *a;
    *a = *b;
    *b = danh;
}
void insert(Store *STO_1, int n)
{
    Store *STO_2 = new Store[n];
    STO_2 = STO_1;
    for (int i = 0; i < n - 1; i++)
        for (int j = i + 1; j < n; j++)
            if (STO_2[i].so_luong_ton > STO_2[j].so_luong_ton)
                swap(&STO_2[i], &STO_2[j]);
}
int main()
{
    Store STO_1[100];
    int n;
    std::cout << "Nhap vao so mat hang: ";
    std::cin >> n;
    std::cout << std::endl;
    for (int i = 0; i < n; i++)
    {
        STO_1[i].input(i + 1);
        std::cout << std::endl;
    }
    for (int i = 0; i < n; i++)
    {
        STO_1[i].output(i + 1);
        std::cout << std::endl;
    }
    std::cout << std::endl;
    std::cout << "Ten Mat hang co so luong ton nhieu nhat: " << find_max_SLT(STO_1, n).ten_hang << std::endl;
    std::cout << std::endl;
    std::cout << "Ten mat hang co so luong ton it nhat: " << find_min_SLT(STO_1, n).ten_hang << std::endl;
    std::cout << std::endl;
    std::cout << "Ten mat hang co gia tien cao nhat: " << find_max_price(STO_1, n).ten_hang << std::endl;
    std::cout << std::endl;
    std::cout << "Danh sach co so thang bao hanh lon hon 12: " << std::endl;
    find_bao_hanh(STO_1, n);
    std::cout << std::endl;
    std::cout << "Sap xep cac mat hang theo thu tu tang dan cua so luong ton: " << std::endl;
    insert(STO_1, n);
    for (int i = 0; i < n; i++)
    {
        STO_1[i].output(i + 1);
        std::cout << std::endl;
    }
}